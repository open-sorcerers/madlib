import T from "TestTools"
import W from "Wish"

import { add } from "./Test"
import M from "./Test2"

t1 = T.test("It should fail", (x) => (
  T.assertEquals(add(1, 2), 4)
))

t2 = T.test("It should work", (x) => (
  T.assertEquals(add(1, 2), 3)
))

t3 = T.test("It should also work", (x) => (
  W.after(2000, <1, 3>)
    |> chain((res) => (T.assertEquals(res, <1, 3>)))
))

t4 = T.test("It should also work for records", (x) => (
  T.assertEquals({ x: 3, y: { z: 3 } }, { x: 2, y: { z: 2 } })
))

t5 = T.test("It should build a map", (x) => (
  T.assertEquals(M.fromList([<1, 3>]), M.fromList([<1, 3>]))
))

t6 = T.test("It should insert stuff in a map", (x) => (
  T.assertEquals(M.insert("stuff", 3, M.empty), M.fromList([<"stuff", 3>]))
))

t7 = T.test("It should insert stuff in a non empty map", (x) => (
  T.assertEquals(M.insert("stuff", 3, M.fromList([<"stuff", 4>])), M.fromList([<"stuff", 3>]))
))

T.runTests([t1, t2, t3, t4, t5, t6, t7])
