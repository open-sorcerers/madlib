Right
  AST
    { aimports = []
    , aexps =
        [ Solved
            (TCon (TC "String" Star))
            (Area (Loc 0 1 1) (Loc 124 4 1))
            (Where
               (Solved
                  (TRecord
                     (fromList
                        [ ( "fulfilled" , TCon (TC "Boolean" Star) )
                        , ( "job" , TCon (TC "String" Star) )
                        , ( "name" , TCon (TC "String" Star) )
                        , ( "x" , TCon (TC "Number" Star) )
                        ])
                     False)
                  (Area (Loc 6 1 7) (Loc 65 1 66))
                  (Record
                     [ Field
                         ( "x"
                         , Solved
                             (TCon (TC "Number" Star))
                             (Area (Loc 11 1 12) (Loc 12 1 13))
                             (LNum "4")
                         )
                     , Field
                         ( "name"
                         , Solved
                             (TCon (TC "String" Star))
                             (Area (Loc 20 1 21) (Loc 26 1 27))
                             (LStr "John")
                         )
                     , Field
                         ( "job"
                         , Solved
                             (TCon (TC "String" Star))
                             (Area (Loc 33 1 34) (Loc 45 1 46))
                             (LStr "Accountant")
                         )
                     , Field
                         ( "fulfilled"
                         , Solved
                             (TCon (TC "Boolean" Star))
                             (Area (Loc 58 1 59) (Loc 63 1 64))
                             (LBool "false")
                         )
                     ]))
               [ Solved
                   (TApp
                      (TApp
                         (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                         (TRecord (fromList [ ( "name" , TCon (TC "String" Star) ) ]) True))
                      (TCon (TC "String" Star)))
                   (Area (Loc 71 2 3) (Loc 94 2 26))
                   (Is
                      (PRecord (fromList [ ( "name" , PVar "name" ) ]))
                      (Solved
                         (TCon (TC "String" Star))
                         (Area (Loc 90 2 22) (Loc 94 2 26))
                         (Var "name")))
               , Solved
                   (TApp
                      (TApp
                         (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                         (TRecord
                            (fromList
                               [ ( "name" , TCon (TC "String" Star) )
                               , ( "x" , TCon (TC "Number" Star) )
                               ])
                            True))
                      (TCon (TC "String" Star)))
                   (Area (Loc 97 3 3) (Loc 122 3 28))
                   (Is
                      (PRecord
                         (fromList [ ( "..." , PSpread (PVar "b") ) , ( "x" , PVar "x" ) ]))
                      (Solved
                         (TCon (TC "String" Star))
                         (Area (Loc 116 3 22) (Loc 122 3 28))
                         (FieldAccess
                            (Solved
                               (TRecord (fromList [ ( "name" , TVar (TV "e" Star) ) ]) True)
                               (Area (Loc 116 3 22) (Loc 117 3 23))
                               (Var "b"))
                            (Solved
                               (TApp
                                  (TApp
                                     (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                                     (TRecord (fromList [ ( "name" , TVar (TV "e" Star) ) ]) True))
                                  (TVar (TV "e" Star)))
                               (Area (Loc 118 3 24) (Loc 122 3 28))
                               (Var ".name")))))
               ])
        ]
    , atypedecls = []
    , ainterfaces = []
    , ainstances = []
    , apath = Just "path"
    }