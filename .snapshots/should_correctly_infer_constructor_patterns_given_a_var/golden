Right
  AST
    { aimports = []
    , aexps =
        [ Solved
            (TArr (TComp "path" "Maybe" [ TVar (TV "c") ]) (TVar (TV "c")))
            (Area (Loc 32 2 1) (Loc 34 2 3))
            (Assignment
               "fn"
               (Solved
                  (TArr (TComp "path" "Maybe" [ TVar (TV "c") ]) (TVar (TV "c")))
                  (Area (Loc 37 2 6) (Loc 81 6 1))
                  (Abs
                     "b"
                     [ Solved
                         (TVar (TV "c"))
                         (Area (Loc 48 3 3) (Loc 79 5 3))
                         (Where
                            (Solved
                               (TComp "path" "Maybe" [ TVar (TV "c") ])
                               (Area (Loc 54 3 9) (Loc 55 3 10))
                               (Var "b"))
                            [ Solved
                                (TArr (TComp "path" "Maybe" [ TVar (TV "c") ]) (TVar (TV "c")))
                                (Area (Loc 63 4 5) (Loc 75 4 17))
                                (Is
                                   (PCtor "Just" [ PVar "x" ])
                                   (Solved
                                      (TVar (TV "c")) (Area (Loc 74 4 16) (Loc 75 4 17)) (Var "x")))
                            ])
                     ])))
        , Solved
            (TCon CNum)
            (Area (Loc 82 7 1) (Loc 93 7 12))
            (App
               (Solved
                  (TArr (TComp "path" "Maybe" [ TVar (TV "f") ]) (TVar (TV "f")))
                  (Area (Loc 82 7 1) (Loc 84 7 3))
                  (Var "fn"))
               (Solved
                  (TComp "path" "Maybe" [ TCon CNum ])
                  (Area (Loc 85 7 4) (Loc 92 7 11))
                  (App
                     (Solved
                        (TArr (TVar (TV "h")) (TComp "path" "Maybe" [ TVar (TV "h") ]))
                        (Area (Loc 85 7 4) (Loc 89 7 8))
                        (Var "Just"))
                     (Solved (TCon CNum) (Area (Loc 90 7 9) (Loc 91 7 10)) (LNum "3"))
                     True))
               True)
        ]
    , atypedecls =
        [ ADT
            { adtname = "Maybe"
            , adtparams = [ "a" ]
            , adtconstructors =
                [ Constructor "Just" [ TRSingle "a" ] , Constructor "Nothing" [] ]
            , adtexported = False
            }
        ]
    , apath = Just "path"
    }