Right
  AST
    { aimports = []
    , aexps =
        [ Solved
            (TApp
               (TApp
                  (TCon (TC "Wish" (Kfun Star (Kfun Star Star))))
                  (TVar (TV "c" Star)))
               (TCon (TC "Number" Star)))
            (Area (Loc 56 2 1) (Loc 86 2 31))
            (App
               (Solved
                  (TApp
                     (TApp
                        (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                        (TApp
                           (TApp
                              (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                              (TApp
                                 (TApp
                                    (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                                    (TVar (TV "c" Star)))
                                 (TVar (TV "d" Star))))
                           (TApp
                              (TApp
                                 (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                                 (TApp
                                    (TApp
                                       (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                                       (TVar (TV "e" Star)))
                                    (TVar (TV "d" Star))))
                              (TVar (TV "d" Star)))))
                     (TApp
                        (TApp
                           (TCon (TC "Wish" (Kfun Star (Kfun Star Star))))
                           (TVar (TV "c" Star)))
                        (TVar (TV "e" Star))))
                  (Area (Loc 56 2 1) (Loc 60 2 5))
                  (Var "Wish"))
               (Solved
                  (TApp
                     (TApp
                        (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                        (TApp
                           (TApp
                              (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                              (TVar (TV "c" Star)))
                           (TVar (TV "h" Star))))
                     (TApp
                        (TApp
                           (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                           (TApp
                              (TApp
                                 (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                                 (TCon (TC "Number" Star)))
                              (TVar (TV "h" Star))))
                        (TVar (TV "h" Star))))
                  (Area (Loc 61 2 6) (Loc 85 2 30))
                  (Abs
                     "bad"
                     [ Solved
                         (TApp
                            (TApp
                               (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                               (TApp
                                  (TApp
                                     (TCon (TC "(->)" (Kfun Star (Kfun Star Star))))
                                     (TCon (TC "Number" Star)))
                                  (TVar (TV "h" Star))))
                            (TVar (TV "h" Star)))
                         (Area (Loc 61 2 6) (Loc 85 2 30))
                         (Abs
                            "good"
                            [ Solved
                                (TVar (TV "h" Star))
                                (Area (Loc 77 2 22) (Loc 84 2 29))
                                (App
                                   (Solved
                                      (TVar (TV "g" Star))
                                      (Area (Loc 77 2 22) (Loc 81 2 26))
                                      (Var "good"))
                                   (Solved
                                      (TCon (TC "Number" Star))
                                      (Area (Loc 82 2 27) (Loc 83 2 28))
                                      (LNum "3"))
                                   True)
                            ])
                     ]))
               True)
        ]
    , atypedecls =
        [ ADT
            { adtname = "Wish"
            , adtparams = [ "e" , "a" ]
            , adtconstructors =
                [ Constructor
                    "Wish"
                    [ TRArr
                        (TRArr (TRSingle "e") (TRSingle "m"))
                        (TRArr (TRArr (TRSingle "a") (TRSingle "m")) (TRSingle "m"))
                    ]
                ]
            , adtexported = True
            }
        ]
    , ainterfaces = []
    , ainstances = []
    , apath = Just "path"
    }