Right
  AST
    { aimports = []
    , aexps =
        [ Solved
            (TComp "User" [ TCon CString ])
            (Located
               (Loc 29 2 1)
               (Assignment
                  "u"
                  (Solved
                     (TComp "User" [ TCon CString ])
                     (Located
                        (Loc 33 2 5)
                        (App
                           (Solved
                              (TArr (TCon CNum) (TComp "User" [ TCon CString ]))
                              (Located
                                 (Loc 33 2 5)
                                 (App
                                    (Solved
                                       (TArr
                                          (TVar (TV "c"))
                                          (TArr (TCon CNum) (TComp "User" [ TVar (TV "c") ])))
                                       (Located (Loc 33 2 5) (Var "LoggedIn")))
                                    (Solved (TCon CString) (Located (Loc 42 2 14) (LStr "John"))))))
                           (Solved (TCon CNum) (Located (Loc 50 2 22) (LInt "33"))))))))
        , Solved
            (TCon CNum)
            (Located
               (Loc 54 3 1)
               (Switch
                  (Solved
                     (TComp "User" [ TCon CString ]) (Located (Loc 61 3 8) (Var "u")))
                  [ Case
                      { casepos = Loc 68 4 3
                      , casetype = Just (TArr (TComp "User" [ TCon CNum ]) (TCon CNum))
                      , casepattern = PCtor "LoggedIn" [ PCon "Num" , PVar "x" ]
                      , caseexp = Solved (TCon CNum) (Located (Loc 92 4 27) (Var "x"))
                      }
                  , Case
                      { casepos = Loc 96 5 3
                      , casetype =
                          Just (TArr (TComp "User" [ TCon CString ]) (TCon CNum))
                      , casepattern = PCtor "LoggedIn" [ PCon "String" , PVar "x" ]
                      , caseexp = Solved (TCon CNum) (Located (Loc 120 5 27) (Var "x"))
                      }
                  ]))
        ]
    , aadts =
        [ ADT
            { adtname = "User"
            , adtparams = [ "a" ]
            , adtconstructors =
                [ ADTConstructor
                    { adtcname = "LoggedIn"
                    , adtcargs = Just [ TRSingle "a" , TRSingle "Num" ]
                    }
                ]
            }
        ]
    , apath = Just "path"
    }