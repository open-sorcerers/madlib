Right
  AST
    { aimports = []
    , aexps =
        [ Solved
            (TComp "User" [ TCon CString ])
            (Area (Loc 29 2 1) (Loc 30 2 2))
            (Assignment
               "u"
               (Solved
                  (TComp "User" [ TCon CString ])
                  (Area (Loc 50 2 22) (Loc 52 2 24))
                  (App
                     (Solved
                        (TArr (TCon CNum) (TComp "User" [ TCon CString ]))
                        (Area (Loc 50 2 22) (Loc 52 2 24))
                        (App
                           (Solved
                              (TArr
                                 (TVar (TV "c"))
                                 (TArr (TCon CNum) (TComp "User" [ TVar (TV "c") ])))
                              (Area (Loc 33 2 5) (Loc 41 2 13))
                              (Var "LoggedIn"))
                           (Solved
                              (TCon CString) (Area (Loc 42 2 14) (Loc 48 2 20)) (LStr "John"))))
                     (Solved
                        (TCon CNum) (Area (Loc 50 2 22) (Loc 52 2 24)) (LInt "33")))))
        , Solved
            (TCon CNum)
            (Area (Loc 54 3 1) (Loc 123 6 2))
            (Switch
               (Solved
                  (TComp "User" [ TCon CString ])
                  (Area (Loc 61 3 8) (Loc 62 3 9))
                  (Var "u"))
               [ Solved
                   (TArr (TComp "User" [ TCon CNum ]) (TCon CNum))
                   (Area (Loc 68 4 3) (Loc 93 4 28))
                   (Case
                      (PCtor "LoggedIn" [ PCon "Num" , PVar "x" ])
                      (Solved (TCon CNum) (Area (Loc 92 4 27) (Loc 93 4 28)) (Var "x")))
               , Solved
                   (TArr (TComp "User" [ TCon CString ]) (TCon CNum))
                   (Area (Loc 96 5 3) (Loc 121 5 28))
                   (Case
                      (PCtor "LoggedIn" [ PCon "String" , PVar "x" ])
                      (Solved
                         (TCon CNum) (Area (Loc 120 5 27) (Loc 121 5 28)) (Var "x")))
               ])
        ]
    , aadts =
        [ ADT
            { adtname = "User"
            , adtparams = [ "a" ]
            , adtconstructors =
                [ ADTConstructor
                    { adtcname = "LoggedIn"
                    , adtcargs = Just [ TRSingle "a" , TRSingle "Num" ]
                    }
                ]
            }
        ]
    , apath = Just "path"
    }