Right
  AST
    { aimports = []
    , aexps =
        [ Assignment
            { epos = Loc 29 2 1
            , etype = Just (TComp "User" [ TCon CString ])
            , eexp =
                App
                  { epos = Loc 33 2 5
                  , etype = Just (TComp "User" [ TCon CString ])
                  , eabs =
                      App
                        { epos = Loc 33 2 5
                        , etype = Just (TArr (TCon CNum) (TComp "User" [ TCon CString ]))
                        , eabs =
                            Var
                              { epos = Loc 33 2 5
                              , etype =
                                  Just
                                    (TArr
                                       (TVar (TV "c"))
                                       (TArr (TCon CNum) (TComp "User" [ TVar (TV "c") ])))
                              , ename = "LoggedIn"
                              }
                        , earg =
                            LStr
                              { epos = Loc 42 2 14
                              , etype = Just (TCon CString)
                              , eval = "John"
                              }
                        , efieldAccess = False
                        }
                  , earg =
                      LInt
                        { epos = Loc 50 2 22 , etype = Just (TCon CNum) , eval = "33" }
                  , efieldAccess = False
                  }
            , ename = "u"
            , eexported = False
            }
        , Switch
            { epos = Loc 54 3 1
            , etype = Just (TCon CNum)
            , ecases =
                [ Case
                    { casepos = Loc 68 4 3
                    , casetype = Just (TArr (TComp "User" [ TCon CNum ]) (TCon CNum))
                    , casepattern = PCtor "LoggedIn" [ PCon "Num" , PVar "x" ]
                    , caseexp =
                        Var { epos = Loc 92 4 27 , etype = Just (TCon CNum) , ename = "x" }
                    }
                , Case
                    { casepos = Loc 96 5 3
                    , casetype =
                        Just (TArr (TComp "User" [ TCon CString ]) (TCon CNum))
                    , casepattern = PCtor "LoggedIn" [ PCon "String" , PVar "x" ]
                    , caseexp =
                        Var
                          { epos = Loc 120 5 27 , etype = Just (TCon CNum) , ename = "x" }
                    }
                ]
            , eexp =
                Var
                  { epos = Loc 61 3 8
                  , etype = Just (TComp "User" [ TCon CString ])
                  , ename = "u"
                  }
            }
        ]
    , aadts =
        [ ADT
            { adtname = "User"
            , adtparams = [ "a" ]
            , adtconstructors =
                [ ADTConstructor
                    { adtcname = "LoggedIn"
                    , adtcargs = Just [ TRSingle "a" , TRSingle "Num" ]
                    }
                ]
            }
        ]
    , apath = Just "path"
    }