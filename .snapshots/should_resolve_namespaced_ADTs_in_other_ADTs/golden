Right
  (fromList
     [ ( "./ModuleA"
       , AST
           { aimports = []
           , aexps = []
           , atypedecls =
               [ ADT
                   { adtname = "Maybe"
                   , adtparams = [ "a" ]
                   , adtconstructors =
                       [ Constructor "Just" [ TRSingle "a" ] , Constructor "Nothing" [] ]
                   , adtexported = True
                   }
               ]
           , apath = Just "./ModuleA"
           }
       )
     , ( "./ModuleB"
       , AST
           { aimports = [ DefaultImport "M" "./ModuleA" "./ModuleA" ]
           , aexps =
               [ Solved
                   (TComp "./ModuleB" "MyType" [])
                   (Area (Loc 64 3 1) (Loc 65 3 2))
                   (Assignment
                      "x"
                      (Solved
                         (TComp "./ModuleB" "MyType" [])
                         (Area (Loc 68 3 5) (Loc 87 3 24))
                         (App
                            (Solved
                               (TArr
                                  (TComp "./ModuleA" "Maybe" [ TCon CString ])
                                  (TComp "./ModuleB" "MyType" []))
                               (Area (Loc 68 3 5) (Loc 74 3 11))
                               (Var "MyType"))
                            (Solved
                               (TComp "./ModuleA" "Maybe" [ TCon CString ])
                               (Area (Loc 75 3 12) (Loc 76 3 13))
                               (App
                                  (Solved
                                     (TArr
                                        (TVar [] (TV "f"))
                                        (TComp "./ModuleA" "Maybe" [ TVar [] (TV "f") ]))
                                     (Area (Loc 75 3 12) (Loc 76 3 13))
                                     (FieldAccess
                                        (Solved
                                           (TRecord
                                              (fromList
                                                 [ ( "Just"
                                                   , TArr
                                                       (TVar [] (TV "a"))
                                                       (TComp
                                                          "./ModuleA" "Maybe" [ TVar [] (TV "a") ])
                                                   )
                                                 , ( "Nothing"
                                                   , TComp "./ModuleA" "Maybe" [ TVar [] (TV "b") ]
                                                   )
                                                 ])
                                              False)
                                           (Area (Loc 75 3 12) (Loc 76 3 13))
                                           (Var "M"))
                                        (Solved
                                           (TArr
                                              (TRecord
                                                 (fromList [ ( "Just" , TVar [] (TV "e") ) ]) True)
                                              (TVar [] (TV "e")))
                                           (Area (Loc 77 3 14) (Loc 81 3 18))
                                           (Var ".Just"))))
                                  (Solved
                                     (TCon CString) (Area (Loc 82 3 19) (Loc 85 3 22)) (LStr "3"))
                                  True))
                            True)))
               ]
           , atypedecls =
               [ ADT
                   { adtname = "MyType"
                   , adtparams = []
                   , adtconstructors =
                       [ Constructor "MyType" [ TRComp "M.Maybe" [ TRSingle "String" ] ] ]
                   , adtexported = False
                   }
               ]
           , apath = Just "./ModuleB"
           }
       )
     ])